#!/bin/bash

echo "üß™ –ü–û–®–ê–ì–û–í–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï POSTMAN –ö–û–õ–õ–ï–ö–¶–ò–ò"
echo "============================================="

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[1;34m'
NC='\033[0m'

# –ë–∞–∑–æ–≤—ã–µ URL
BASE_URL="http://localhost:8081"
STATS_URL="http://localhost:9090"

# –°—á–µ—Ç—á–∏–∫–∏
TOTAL_TESTS=0
PASSED_TESTS=0
FAILED_TESTS=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
test_request() {
    local test_name="$1"
    local method="$2"
    local url="$3"
    local data="$4"
    local expected_code="$5"
    
    TOTAL_TESTS=$((TOTAL_TESTS + 1))
    
    echo ""
    echo -e "${BLUE}–¢–µ—Å—Ç $TOTAL_TESTS: $test_name${NC}"
    echo "–ó–∞–ø—Ä–æ—Å: $method $url"
    
    if [ "$method" = "POST" ] && [ -n "$data" ]; then
        response=$(curl -s -w "HTTPCODE:%{http_code}" -X POST -H "Content-Type: application/json" -d "$data" "$url")
    elif [ "$method" = "POST" ]; then
        response=$(curl -s -w "HTTPCODE:%{http_code}" -X POST "$url")
    else
        response=$(curl -s -w "HTTPCODE:%{http_code}" "$url")
    fi
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º HTTP –∫–æ–¥
    http_code=$(echo "$response" | grep -o "HTTPCODE:[0-9]*" | cut -d: -f2)
    body=$(echo "$response" | sed 's/HTTPCODE:[0-9]*$//')
    
    echo "–û—Ç–≤–µ—Ç: HTTP $http_code"
    
    if [ "$http_code" = "$expected_code" ]; then
        echo -e "${GREEN}‚úÖ –ü–†–û–®–ï–õ${NC}"
        PASSED_TESTS=$((PASSED_TESTS + 1))
    else
        echo -e "${RED}‚ùå –ü–†–û–í–ê–õ–ï–ù${NC} (–æ–∂–∏–¥–∞–ª—Å—è $expected_code)"
        echo "–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: $body"
        FAILED_TESTS=$((FAILED_TESTS + 1))
    fi
}

echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
main_status=$(curl -s -o /dev/null -w "%{http_code}" "$BASE_URL/")
stats_status=$(curl -s -o /dev/null -w "%{http_code}" "$STATS_URL/stats?start=2020-01-01%2000:00:00&end=2025-01-01%2000:00:00")

if [ "$main_status" != "200" ]; then
    echo -e "${RED}‚ùå Main Service –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (HTTP $main_status)${NC}"
    exit 1
fi

if [ "$stats_status" != "200" ]; then
    echo -e "${RED}‚ùå Stats Service –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (HTTP $stats_status)${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ –û–±–∞ —Å–µ—Ä–≤–∏—Å–∞ –¥–æ—Å—Ç—É–ø–Ω—ã${NC}"

echo ""
echo -e "${YELLOW}=== –ò–ú–ò–¢–ê–¶–ò–Ø –ü–ï–†–í–´–• 20 POSTMAN –¢–ï–°–¢–û–í ===${NC}"

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Ç–µ—Å—Ç–∞—Ö
echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
unique_email="testuser_$(date +%s)@test.com"
user_response=$(curl -s -H "Content-Type: application/json" -d "{\"name\":\"Test User\",\"email\":\"$unique_email\"}" "$BASE_URL/admin/users")
user_id=$(echo "$user_response" | grep -o '"id":[0-9]*' | cut -d: -f2 || echo "1")
echo "–°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å ID: $user_id"

# –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
echo "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏..."
unique_cat_name="TestCategory_$(date +%s)"
cat_response=$(curl -s -H "Content-Type: application/json" -d "{\"name\":\"$unique_cat_name\"}" "$BASE_URL/admin/categories")
cat_id=$(echo "$cat_response" | grep -o '"id":[0-9]*' | cut -d: -f2 || echo "1")
echo "–°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å ID: $cat_id"

# –¢–ï–°–¢ 1: Validation - –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –±–µ–∑ eventId (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 400)
test_request "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –±–µ–∑ eventId" "POST" "$BASE_URL/users/$user_id/requests" "" "400"

# –¢–ï–°–¢ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 200)
test_request "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" "GET" "$BASE_URL/users/$user_id/events" "" "200"

# –¢–ï–°–¢ 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 200)
test_request "–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π" "GET" "$BASE_URL/events" "" "200"

# –¢–ï–°–¢ 4: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 200)
test_request "–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É–±–ª–∏—á–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π" "GET" "$BASE_URL/categories" "" "200"

# –¢–ï–°–¢ 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 200)
test_request "–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π" "GET" "$BASE_URL/admin/users" "" "200"

# –¢–ï–°–¢ 6: –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 200)
test_request "–ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π" "GET" "$BASE_URL/admin/categories" "" "200"

# –¢–ï–°–¢ 7: –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –±–µ–∑ description (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 400)
event_data_no_desc='{"annotation":"Test event annotation with more than 20 characters","category":'$cat_id',"eventDate":"2025-12-31 15:00:00","location":{"lat":55.754167,"lon":37.62},"paid":false,"participantLimit":10,"requestModeration":true,"title":"Test Event"}'
test_request "–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è –±–µ–∑ description" "POST" "$BASE_URL/users/$user_id/events" "$event_data_no_desc" "400"

# –¢–ï–°–¢ 8: –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è —Å –ø—É—Å—Ç—ã–º description (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 400)
event_data_empty_desc='{"annotation":"Test event annotation with more than 20 characters","category":'$cat_id',"description":"","eventDate":"2025-12-31 15:00:00","location":{"lat":55.754167,"lon":37.62},"paid":false,"participantLimit":10,"requestModeration":true,"title":"Test Event"}'
test_request "–°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è —Å –ø—É—Å—Ç—ã–º description" "POST" "$BASE_URL/users/$user_id/events" "$event_data_empty_desc" "400"

# –¢–ï–°–¢ 9: –°–æ–∑–¥–∞–Ω–∏–µ –≤–∞–ª–∏–¥–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 201)
event_data_valid='{"annotation":"Test event annotation with more than 20 characters","category":'$cat_id',"description":"Test event description with more than 20 characters","eventDate":"2025-12-31 15:00:00","location":{"lat":55.754167,"lon":37.62},"paid":false,"participantLimit":10,"requestModeration":true,"title":"Test Event"}'
event_response=$(curl -s -w "HTTPCODE:%{http_code}" -X POST -H "Content-Type: application/json" -d "$event_data_valid" "$BASE_URL/users/$user_id/events")
event_http_code=$(echo "$event_response" | grep -o "HTTPCODE:[0-9]*" | cut -d: -f2)
event_body=$(echo "$event_response" | sed 's/HTTPCODE:[0-9]*$//')
event_id=$(echo "$event_body" | grep -o '"id":[0-9]*' | cut -d: -f2 || echo "1")

echo ""
echo -e "${BLUE}–¢–µ—Å—Ç 9: –°–æ–∑–¥–∞–Ω–∏–µ –≤–∞–ª–∏–¥–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è${NC}"
echo "–ó–∞–ø—Ä–æ—Å: POST $BASE_URL/users/$user_id/events"
echo "–û—Ç–≤–µ—Ç: HTTP $event_http_code"

if [ "$event_http_code" = "201" ]; then
    echo -e "${GREEN}‚úÖ –ü–†–û–®–ï–õ${NC}"
    echo "–°–æ–∑–¥–∞–Ω–æ —Å–æ–±—ã—Ç–∏–µ —Å ID: $event_id"
    PASSED_TESTS=$((PASSED_TESTS + 1))
else
    echo -e "${RED}‚ùå –ü–†–û–í–ê–õ–ï–ù${NC} (–æ–∂–∏–¥–∞–ª—Å—è 201)"
    echo "–¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: $event_body"
    FAILED_TESTS=$((FAILED_TESTS + 1))
fi
TOTAL_TESTS=$((TOTAL_TESTS + 1))

# –¢–ï–°–¢ 10: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 200)
test_request "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è" "GET" "$BASE_URL/users/$user_id/events/$event_id" "" "200"

# –¢–ï–°–¢ 11: –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ —É—á–∞—Å—Ç–∏–µ –≤ —Å–æ–±—ã—Ç–∏–∏ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 201 –∏–ª–∏ 400 –µ—Å–ª–∏ —Å–≤–æ–µ —Å–æ–±—ã—Ç–∏–µ)
test_request "–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –Ω–∞ —É—á–∞—Å—Ç–∏–µ" "POST" "$BASE_URL/users/$user_id/requests?eventId=$event_id" "" "400"

# –¢–ï–°–¢ 12: –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 200)
test_request "–ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" "GET" "$BASE_URL/users/$user_id/requests" "" "200"

# –¢–ï–°–¢ 13: –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 200)
test_request "–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–æ–±—ã—Ç–∏–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏" "GET" "$BASE_URL/events?categories=$cat_id" "" "200"

# –¢–ï–°–¢ 14: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 200)
test_request "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏" "GET" "$STATS_URL/stats?start=2020-01-01%2000:00:00&end=2025-01-01%2000:00:00" "" "200"

# –¢–ï–°–¢ 15: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ö–∏—Ç–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å 201)
hit_data='{"app":"ewm-main-service","uri":"/test","ip":"127.0.0.1","timestamp":"2023-09-07 11:00:23"}'
test_request "–û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ö–∏—Ç–∞" "POST" "$STATS_URL/hit" "$hit_data" "201"

echo ""
echo "üìä –ò–¢–û–ì–û–í–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–†–ú–ò–ù–ê–õ–¨–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:"
echo "================================================="
echo -e "–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: ${YELLOW}$TOTAL_TESTS${NC}"
echo -e "–ü—Ä–æ—à–ª–æ: ${GREEN}$PASSED_TESTS${NC}"
echo -e "–ü—Ä–æ–≤–∞–ª–∏–ª–æ—Å—å: ${RED}$FAILED_TESTS${NC}"

success_rate=$(echo "scale=1; $PASSED_TESTS * 100 / $TOTAL_TESTS" | bc -l 2>/dev/null || echo "$(($PASSED_TESTS * 100 / $TOTAL_TESTS))")
echo -e "–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: ${YELLOW}$success_rate%${NC}"

if [ $FAILED_TESTS -eq 0 ]; then
    echo -e "\n${GREEN}üéâ –í–°–ï –¢–ï–†–ú–ò–ù–ê–õ–¨–ù–´–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò!${NC}"
    echo -e "${GREEN}‚ú® –ü—Ä–æ–±–ª–µ–º–∞ –Ω–µ –≤ API, –∞ –≤ Postman –∫–æ–ª–ª–µ–∫—Ü–∏–∏${NC}"
elif [ $FAILED_TESTS -lt 3 ]; then
    echo -e "\n${YELLOW}‚ö†Ô∏è  –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç${NC}"
    echo -e "${YELLOW}üîç –ü—Ä–æ–±–ª–µ–º–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö Postman —Å–∫—Ä–∏–ø—Ç–∞—Ö${NC}"
else
    echo -e "\n${RED}‚ùå –ï—Å—Ç—å —Å–µ—Ä—å–µ–∑–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å API${NC}"
    echo -e "${RED}üîß –ù—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞${NC}"
fi

echo ""
echo -e "${BLUE}üîç –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:${NC}"
echo "1. –ï—Å–ª–∏ —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—Ö–æ–¥—è—Ç, –ø—Ä–æ–±–ª–µ–º–∞ –≤ Postman —Å–∫—Ä–∏–ø—Ç–∞—Ö"
echo "2. –ï—Å–ª–∏ –Ω–µ—Ç - –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å API"
echo "3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤: docker-compose logs main-service"
